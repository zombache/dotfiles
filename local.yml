---
- hosts: localhost
  connection: local


  tasks:
  - name: update package indexes
    become: true
    community.general.pacman:
      update_cache: true

  - name: install packages
    become: true
    community.general.pacman:
      state: present
      name:
      - bspwm
      - sxhkd
      - neofetch
      - ranger
      - kubectl
      - kubectx
      - gping
      - lsd
      - duf
      - ripgrep
      - picom
      - bat
      - fzf
      - jq
      - tldr
      - procs
      - dog
      - python-pip
      - python-setuptools
      - docker
      - k9s
      - vault
      - consul
      - make
      - neovim
      - alacritty
      - xdotool
      - polybar
      - ttf-mononoki-nerd
      - feh
      - lxappearance-gtk3
      - papirus-icon-theme
      - arc-gtk-theme-eos
      - lazygit
      - aws-cli-v2
      - helm
      - xclip
      - fish
      - fisher
      - rofi
      - docker-compose
      - dunst

  - name: install python packages
    ansible.builtin.pip:
      state: present
      name:
        - pytest
        - pyyaml
        - scrapy
        - black

  # Setup Bspwm
  - name: install bspwm config
    ansible.builtin.shell:
      cmd: "install -Dm755 files/.config/bspwm/bspwmrc ~/.config/bspwm/bspwmrc"

  # Setup sxhkd
  - name: install sxhkd config
    ansible.builtin.shell:
      cmd: "install -Dm644 files/.config/sxhkd/sxhkdrc  ~/.config/sxhkd/sxhkdrc"

  # Setup Ranger
  - name: install ranger config
    ansible.builtin.shell:
      cmd: "install -Dm644 files/.config/ranger/rc.conf ~/.config/ranger/rc.conf"

  # # Setup K9s
  # - name:
  #   ansible.builtin.shell:
  #     cmd: "install -Dm644 files/.config/k9s/* ~/.config/ranger/*"

  # Setup Polybar
  - name: install polybar config
    ansible.builtin.shell:
      cmd: "install -Dm644 files/.config/polybar/config.ini ~/.config/polybar/config.ini"

  # Setup Alacritty
  - name: install alacritty config
    ansible.builtin.shell:
      cmd: "install -Dm644 files/.config/alacritty/alacritty.yml ~/.config/alacritty/alacritty.yml"

  # Setup X files
  - name: install xinitrc
    ansible.builtin.shell:
      cmd: "install -Dm644 files/.xinitrc ~/.xinitrc"

  - name: install xresources
    ansible.builtin.shell:
      cmd: "install -Dm644 files/.Xresources ~/.Xresources"

  # Setup Picom
  - name: install picom config
    ansible.builtin.shell:
      cmd: "install -Dm644 files/.config/picom.conf ~/.config/picom.conf"

  # Install k3d
  - name: install k3d
    become: true
    ansible.builtin.shell:
      cmd: "curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash"

  # Docker post install
  - name: enable docker service
    become: true
    ansible.builtin.systemd:
      name: docker.service
      enabled: true
      state: started
  - name: add user to docker group
    become: true
    ansible.builtin.shell:
      cmd: "usermod -aG docker ops"

  # Install Terraform
  - name: download terraform
    become: true
    ansible.builtin.get_url:
      url: "https://releases.hashicorp.com/terraform/1.0.8/terraform_1.0.8_linux_amd64.zip"
      dest: /tmp/terraform.zip
      checksum: sha256:a73459d406067ce40a46f026dce610740d368c3b4a3d96591b10c7a577984c2e
  - name: install terraform
    become: true
    ansible.builtin.unarchive:
      src: /tmp/terraform.zip
      dest: /usr/local/bin
      mode: 0755
